let findPatternStarts (pattern:string) (str:string) = 

    let patternPresent i item = 
        let patternStart = pattern.[0]

        let roomForMatch i =
            (i + pattern.Length) < str.Length

        let foundPattern i =
            str.Substring(i, pattern.Length) = pattern

        item = patternStart && 
            roomForMatch i  &&
            foundPattern i

    str
    |> Seq.iteri (fun i item -> 
        if patternPresent i item then printf "%d " (i + 1))

let pattern = "AACAGCTAA"
let str = "AACAGCTCGTCAAACAGCTAACAGCTAACAGCTACAACAGCTCCTTCCTGGAACAGCTATAACAGCTCTTGAATAATAGTCAACAGCTGCTAACAGCTAACAGCTCCAACAGCTAACAGCTAAACAGCTGCCTCTTAAACAGCTAACAGCTAACAGCTAACAGCTAACAGCTGAACAGCTTGCAACAGCTTATACTGGAACAGCTGAACAGCTCAGATACAACAGCTTAACAGCTGTTACTCAAACAGCTAACAGCTAAGAACAGCTTTTGAACAGCTGTAACAGCTGTAACAGCTAAACAGCTGAGCGAACAGCTCAACAGCTCAAAACAGCTTCGCATTAACAGCTCTAACAGCTGAACAGCTTGTTAAACAGCTAACAGCTGAACAGCTCTACCAGAACAGCTATGAACAGCTCGTGGAACAGCTAACAGCTATAAACAGCTAAACAGCTATCCGGAACAGCTCGAACAGCTAACAGCTAACAGCTAAACAGCTAACAGCTCTGAACAGCTGAAAGCAACAGCTAAACAGCTAACAGCTAACAGCTCACTGGAAACAGCTTGTCAAACAGCTTCAACAGCTGAACAGCTCCATAACAGCTAACAGCTGAGGAACAGCTGCAACAGCTGCGGGAACAGCTCCAAACAGCTACCTAACAGCTACAACAGCTCCAACAGCTCAACAGCTTCTTAACAGCTAAACAGCTGGTCCGTACGATAACAGCTACAAACAGCTTTTAACAGCTAAACAGCTAACAGCTCGGCGGGGAACAGCTTAACAGCTAACAGCTAACAGCTAAACAGCTCCAACAGCTCTTGAGCGATCGAACAGCTGGAACAGCT"

findPatternStarts pattern str

// 13 20 92 108 115 138 145 152 159 244 251 290 371 422 439 469 476 483 491 521 529 536 597 694 741 749 779 786 793